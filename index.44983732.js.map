{"mappings":"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","sources":["src/script.js"],"sourcesContent":["// don't use #f00 use full color code (to add opacity)\nconst PRIMARY_COLOR = \"#ff0000\"; // red\n\n// setting css variables to use it as primary color\ndocument.documentElement.style.setProperty(\"--bg-primary\", PRIMARY_COLOR);\n\nconst MAX_PARTICLE_SIZE = 5;\nconst PARTICLE_SIZE_REDUCE_RATE = 0.005;\nconst MAX_PARTICLE_WEIGHT = 1.5;\nconst PARTICLE_COLOR = PRIMARY_COLOR;\nconst MIN_DISTANCE_LINE = 10000;\nconst CURSOR_CIRCLE_SIZE = 10;\nconst CURSOR_CIRCLE_COLOR = \"#ffffff\"; // white\nconst PARTICLES_TOTAL_LIMIT = 250;\n\nconst isDesktop = window.innerWidth > 1000;\n\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet particles = [];\nconst mouse = {\n  moving: false,\n  x: null,\n  y: null,\n};\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nwindow.addEventListener(\"mousemove\", (event) => {\n  mouse.moving = true;\n  mouse.x = event.pageX;\n  mouse.y = event.pageY;\n});\n\nwindow.addEventListener(\"mouseout\", () => {\n  mouse.x = null;\n  mouse.y = null;\n  mouse.moving = false;\n});\n\nclass Particle {\n  constructor(x, y, size, weight, color) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.weight = weight;\n    this.color = color;\n  }\n\n  draw() {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n\n  update() {\n    this.y += this.weight;\n    this.size = Math.max(this.size - PARTICLE_SIZE_REDUCE_RATE, 0);\n  }\n}\n\nfunction drawLines() {\n  particles.forEach((particle1, index) => {\n    particles.slice(index, particles.length).forEach((particle2) => {\n      // calc distance with pythagorus theorem\n      const distance =\n        (particle1.x - particle2.x) ** 2 + (particle1.y - particle2.y) ** 2;\n      if (distance < MIN_DISTANCE_LINE) {\n        ctx.strokeStyle = particle1.color;\n        ctx.lineWidth = 1;\n\n        ctx.beginPath();\n        ctx.moveTo(particle1.x, particle1.y);\n        ctx.lineTo(particle2.x, particle2.y);\n        ctx.stroke();\n      }\n    });\n  });\n}\n\nfunction addParticle(random = false) {\n  const x = Math.random() * canvas.width + (isDesktop ? canvas.width / 3 : 0);\n  const y = Math.random() * canvas.height;\n  const size = Math.floor(Math.random() * MAX_PARTICLE_SIZE) + 1;\n  // color with random opacity\n  const weight = Math.random() * MAX_PARTICLE_WEIGHT;\n  const color =\n    PARTICLE_COLOR + (Math.floor(Math.random() * 255) + 1).toString(16);\n  particles.push(\n    new Particle(\n      random ? x : mouse.x,\n      random ? y : mouse.y,\n      size,\n      weight,\n      color\n    )\n  );\n}\n\nfunction animate() {\n  // clear the whole canvas first\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  // some particles will be faded away if size is zero or lesser\n  particles = particles.filter((particle) => particle.size > 0);\n  //   drawing the particles\n  particles.forEach((particle) => {\n    particle.update();\n    particle.draw();\n  });\n  //   drawing the lines\n  drawLines();\n  //   if mouse is there in canvas draw a white circle as cursor\n  if (mouse.x !== null && mouse.y !== null) {\n    ctx.beginPath();\n    ctx.arc(mouse.x, mouse.y, CURSOR_CIRCLE_SIZE, 0, Math.PI * 2);\n    ctx.fillStyle = CURSOR_CIRCLE_COLOR;\n    ctx.fill();\n  }\n  //   if mouse is moving and particles are lesser than PARTICLES_TOTAL_LIMIT in the canvas add more particles\n  //   PARTICLES_TOTAL_LIMIT is taken so that there will be no lag (as there won't be more than 200 particles at a time)\n  if (mouse.moving && particles.length < PARTICLES_TOTAL_LIMIT) addParticle();\n  //   if particles are too less then add some random particles\n  else if (particles.length < PARTICLES_TOTAL_LIMIT - 50) addParticle(true);\n  //   consider the moving as false as we added a particle\n  mouse.moving = false;\n\n  requestAnimationFrame(animate);\n}\n\nrequestAnimationFrame(animate);\n\n// FORM SENDING\nconst form = document.querySelector(\"form\");\nconst alertBox = document.querySelector(\"form div .alert\");\nconst formSubmitBtn = document.getElementById(\"formSubmitBtn\");\n\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n  formSubmitBtn.disabled = true;\n\n  const data = new FormData(form);\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(Object.fromEntries(data)),\n  };\n\n  try {\n    await fetch(\"https://formsubmit.co/ajax/18ganapathy04@gmail.com\", options);\n    alertBox.classList.add(\"visible\");\n\n    setTimeout(() => {\n      alertBox.classList.remove(\"visible\");\n    }, 5000);\n  } catch (err) {\n    console.error(err);\n  } finally {\n    form.reset();\n    formSubmitBtn.disabled = false;\n  }\n});\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}