{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["// don't use #f00 use full color code (to add opacity)\nconst PRIMARY_COLOR = \"#ff0000\"; // red\n// setting css variables to use it as primary color\ndocument.documentElement.style.setProperty(\"--bg-primary\", PRIMARY_COLOR);\nconst MAX_PARTICLE_SIZE = 5;\nconst PARTICLE_SIZE_REDUCE_RATE = 0.005;\nconst MAX_PARTICLE_WEIGHT = 1.5;\nconst PARTICLE_COLOR = PRIMARY_COLOR;\nconst MIN_DISTANCE_LINE = 10000;\nconst CURSOR_CIRCLE_SIZE = 10;\nconst CURSOR_CIRCLE_COLOR = \"#ffffff\"; // white\nconst PARTICLES_TOTAL_LIMIT = 250;\nconst isDesktop = window.innerWidth > 1000;\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet particles = [];\nconst mouse = {\n    moving: false,\n    x: null,\n    y: null\n};\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nwindow.addEventListener(\"mousemove\", (event)=>{\n    mouse.moving = true;\n    mouse.x = event.pageX;\n    mouse.y = event.pageY;\n});\nwindow.addEventListener(\"mouseout\", ()=>{\n    mouse.x = null;\n    mouse.y = null;\n    mouse.moving = false;\n});\nclass Particle {\n    constructor(x, y, size, weight, color){\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.weight = weight;\n        this.color = color;\n    }\n    draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n    }\n    update() {\n        this.y += this.weight;\n        this.size = Math.max(this.size - PARTICLE_SIZE_REDUCE_RATE, 0);\n    }\n}\nfunction drawLines() {\n    particles.forEach((particle1, index)=>{\n        particles.slice(index, particles.length).forEach((particle2)=>{\n            // calc distance with pythagorus theorem\n            const distance = (particle1.x - particle2.x) ** 2 + (particle1.y - particle2.y) ** 2;\n            if (distance < MIN_DISTANCE_LINE) {\n                ctx.strokeStyle = particle1.color;\n                ctx.lineWidth = 1;\n                ctx.beginPath();\n                ctx.moveTo(particle1.x, particle1.y);\n                ctx.lineTo(particle2.x, particle2.y);\n                ctx.stroke();\n            }\n        });\n    });\n}\nfunction addParticle(random = false) {\n    const x = Math.random() * canvas.width + (isDesktop ? canvas.width / 3 : 0);\n    const y = Math.random() * canvas.height;\n    const size = Math.floor(Math.random() * MAX_PARTICLE_SIZE) + 1;\n    // color with random opacity\n    const weight = Math.random() * MAX_PARTICLE_WEIGHT;\n    const color = PARTICLE_COLOR + (Math.floor(Math.random() * 255) + 1).toString(16);\n    particles.push(new Particle(random ? x : mouse.x, random ? y : mouse.y, size, weight, color));\n}\nfunction animate() {\n    // clear the whole canvas first\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // some particles will be faded away if size is zero or lesser\n    particles = particles.filter((particle)=>particle.size > 0);\n    //   drawing the particles\n    particles.forEach((particle)=>{\n        particle.update();\n        particle.draw();\n    });\n    //   drawing the lines\n    drawLines();\n    //   if mouse is there in canvas draw a white circle as cursor\n    if (mouse.x !== null && mouse.y !== null) {\n        ctx.beginPath();\n        ctx.arc(mouse.x, mouse.y, CURSOR_CIRCLE_SIZE, 0, Math.PI * 2);\n        ctx.fillStyle = CURSOR_CIRCLE_COLOR;\n        ctx.fill();\n    }\n    //   if mouse is moving and particles are lesser than PARTICLES_TOTAL_LIMIT in the canvas add more particles\n    //   PARTICLES_TOTAL_LIMIT is taken so that there will be no lag (as there won't be more than 200 particles at a time)\n    if (mouse.moving && particles.length < PARTICLES_TOTAL_LIMIT) addParticle();\n    else if (particles.length < PARTICLES_TOTAL_LIMIT - 50) addParticle(true);\n    //   consider the moving as false as we added a particle\n    mouse.moving = false;\n    requestAnimationFrame(animate);\n}\nrequestAnimationFrame(animate);\n// FORM SENDING\nconst form = document.querySelector(\"form\");\nconst alertBox = document.querySelector(\"form div .alert\");\nconst formSubmitBtn = document.getElementById(\"formSubmitBtn\");\nform.addEventListener(\"submit\", async (event)=>{\n    event.preventDefault();\n    formSubmitBtn.disabled = true;\n    const data = new FormData(form);\n    const options = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n        },\n        body: JSON.stringify(Object.fromEntries(data))\n    };\n    try {\n        await fetch(\"https://formsubmit.co/ajax/18ganapathy04@gmail.com\", options);\n        alertBox.classList.add(\"visible\");\n        setTimeout(()=>{\n            alertBox.classList.remove(\"visible\");\n        }, 5000);\n    } catch (err) {\n        console.error(err);\n    } finally{\n        form.reset();\n        formSubmitBtn.disabled = false;\n    }\n});\n\n//# sourceMappingURL=index.d1ccd1b7.js.map\n","// don't use #f00 use full color code (to add opacity)\nconst PRIMARY_COLOR = \"#ff0000\"; // red\n\n// setting css variables to use it as primary color\ndocument.documentElement.style.setProperty(\"--bg-primary\", PRIMARY_COLOR);\n\nconst MAX_PARTICLE_SIZE = 5;\nconst PARTICLE_SIZE_REDUCE_RATE = 0.005;\nconst MAX_PARTICLE_WEIGHT = 1.5;\nconst PARTICLE_COLOR = PRIMARY_COLOR;\nconst MIN_DISTANCE_LINE = 10000;\nconst CURSOR_CIRCLE_SIZE = 10;\nconst CURSOR_CIRCLE_COLOR = \"#ffffff\"; // white\nconst PARTICLES_TOTAL_LIMIT = 250;\n\nconst isDesktop = window.innerWidth > 1000;\n\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet particles = [];\nconst mouse = {\n  moving: false,\n  x: null,\n  y: null,\n};\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nwindow.addEventListener(\"mousemove\", (event) => {\n  mouse.moving = true;\n  mouse.x = event.pageX;\n  mouse.y = event.pageY;\n});\n\nwindow.addEventListener(\"mouseout\", () => {\n  mouse.x = null;\n  mouse.y = null;\n  mouse.moving = false;\n});\n\nclass Particle {\n  constructor(x, y, size, weight, color) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.weight = weight;\n    this.color = color;\n  }\n\n  draw() {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n\n  update() {\n    this.y += this.weight;\n    this.size = Math.max(this.size - PARTICLE_SIZE_REDUCE_RATE, 0);\n  }\n}\n\nfunction drawLines() {\n  particles.forEach((particle1, index) => {\n    particles.slice(index, particles.length).forEach((particle2) => {\n      // calc distance with pythagorus theorem\n      const distance =\n        (particle1.x - particle2.x) ** 2 + (particle1.y - particle2.y) ** 2;\n      if (distance < MIN_DISTANCE_LINE) {\n        ctx.strokeStyle = particle1.color;\n        ctx.lineWidth = 1;\n\n        ctx.beginPath();\n        ctx.moveTo(particle1.x, particle1.y);\n        ctx.lineTo(particle2.x, particle2.y);\n        ctx.stroke();\n      }\n    });\n  });\n}\n\nfunction addParticle(random = false) {\n  const x = Math.random() * canvas.width + (isDesktop ? canvas.width / 3 : 0);\n  const y = Math.random() * canvas.height;\n  const size = Math.floor(Math.random() * MAX_PARTICLE_SIZE) + 1;\n  // color with random opacity\n  const weight = Math.random() * MAX_PARTICLE_WEIGHT;\n  const color =\n    PARTICLE_COLOR + (Math.floor(Math.random() * 255) + 1).toString(16);\n  particles.push(\n    new Particle(\n      random ? x : mouse.x,\n      random ? y : mouse.y,\n      size,\n      weight,\n      color\n    )\n  );\n}\n\nfunction animate() {\n  // clear the whole canvas first\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  // some particles will be faded away if size is zero or lesser\n  particles = particles.filter((particle) => particle.size > 0);\n  //   drawing the particles\n  particles.forEach((particle) => {\n    particle.update();\n    particle.draw();\n  });\n  //   drawing the lines\n  drawLines();\n  //   if mouse is there in canvas draw a white circle as cursor\n  if (mouse.x !== null && mouse.y !== null) {\n    ctx.beginPath();\n    ctx.arc(mouse.x, mouse.y, CURSOR_CIRCLE_SIZE, 0, Math.PI * 2);\n    ctx.fillStyle = CURSOR_CIRCLE_COLOR;\n    ctx.fill();\n  }\n  //   if mouse is moving and particles are lesser than PARTICLES_TOTAL_LIMIT in the canvas add more particles\n  //   PARTICLES_TOTAL_LIMIT is taken so that there will be no lag (as there won't be more than 200 particles at a time)\n  if (mouse.moving && particles.length < PARTICLES_TOTAL_LIMIT) addParticle();\n  //   if particles are too less then add some random particles\n  else if (particles.length < PARTICLES_TOTAL_LIMIT - 50) addParticle(true);\n  //   consider the moving as false as we added a particle\n  mouse.moving = false;\n\n  requestAnimationFrame(animate);\n}\n\nrequestAnimationFrame(animate);\n\n// FORM SENDING\nconst form = document.querySelector(\"form\");\nconst alertBox = document.querySelector(\"form div .alert\");\nconst formSubmitBtn = document.getElementById(\"formSubmitBtn\");\n\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n  formSubmitBtn.disabled = true;\n\n  const data = new FormData(form);\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(Object.fromEntries(data)),\n  };\n\n  try {\n    await fetch(\"https://formsubmit.co/ajax/18ganapathy04@gmail.com\", options);\n    alertBox.classList.add(\"visible\");\n\n    setTimeout(() => {\n      alertBox.classList.remove(\"visible\");\n    }, 5000);\n  } catch (err) {\n    console.error(err);\n  } finally {\n    form.reset();\n    formSubmitBtn.disabled = false;\n  }\n});\n"],"names":["PRIMARY_COLOR","document","documentElement","style","setProperty","isDesktop","window","innerWidth","canvas","querySelector","ctx","getContext","particles","mouse","moving","x","y","width","height","innerHeight","addEventListener","event","pageX","pageY","Particle","constructor","size","weight","color","draw","beginPath","arc","Math","PI","fillStyle","fill","update","max","addParticle","random","PARTICLE_COLOR","floor","toString","push","requestAnimationFrame","animate","clearRect","filter","particle","forEach","particle1","index","slice","length","particle2","distance","strokeStyle","lineWidth","moveTo","lineTo","stroke","PARTICLES_TOTAL_LIMIT","form","alertBox","formSubmitBtn","getElementById","preventDefault","disabled","data","FormData","options","method","headers","Accept","body","JSON","stringify","Object","fromEntries","fetch","classList","add","setTimeout","remove","err","console","error","reset"],"version":3,"file":"index.d1ccd1b7.js.map"}